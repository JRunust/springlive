server:
  port: 8052

spring:
  application:
    name: API-GATEWAY
  config:
    import: configserver:${CONFIG_SERVER:http://localhost:8051}
  cloud:
    gateway:
      routes:
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackuri: forward:/orderServiceFallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

okta:
  oauth2:
    issuer: https://dev-87539651.okta.com/oauth2/default
    audience: api://default
    client-id: 0oae2mh60aDUdSIcx5d7
    client-secret: K8glB2iJ_hy_fT80OnGfCItC15lQyGSGcsijovEmRzpKU3KGYWjIcK8oBQf5x-5L
    scopes: openid, profile, email, offline_access, internal